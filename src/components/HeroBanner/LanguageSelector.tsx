/**
 * This code was generated by Builder.io
 */
"use client";

import React, { useState } from "react";
import { RiArrowDownSFill } from "react-icons/ri";
import Image from "next/image";

type LanguageSelectorProps = {
  languages: string[];
};

const LanguageSelector: React.FC<LanguageSelectorProps> = (props) => {
  const [isOpen, setIsOpen] = useState(false);
  const [selectedLanguage, setSelectedLanguage] = useState(props.languages[0]);

  const toggleDropdown = () => setIsOpen(!isOpen);

  const selectLanguage = (language: string) => {
    setSelectedLanguage(language);
    setIsOpen(false);
  };

  return (
    <div className="relative">
      <button
        onClick={toggleDropdown}
        className="flex gap-2 items-center whitespace-nowrap"
        aria-haspopup="listbox"
        aria-expanded={isOpen}
        aria-label="Select language"
      >
        <span className="self-stretch my-auto">{selectedLanguage}</span>
        <RiArrowDownSFill className="object-contain shrink-0 self-stretch my-auto" />
      </button>
      {isOpen && (
        <ul className="absolute top-full left-0 mt-1 bg-white text-black shadow-md rounded-md">
          {props.languages.map((language) => (
            <li key={language}>
              <button
                onClick={() => selectLanguage(language)}
                className="w-full text-left px-4 py-2 hover:bg-gray-100"
                role="option"
                aria-selected={language === selectedLanguage}
              >
                {language}
              </button>
            </li>
          ))}
        </ul>
      )}
    </div>
  );
};
export default LanguageSelector;
