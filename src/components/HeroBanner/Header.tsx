/**
 * This code was generated by Builder.io
 */
"use client";

import React, { useState } from "react";
import Image from "next/image";
import LanguageSelector from "./LanguageSelector";
import Hamburger from "../Hamburger";
import Backdrop from "../Backdrop";
import Container from "../Container";
import Link from "next/link";
import { cn } from "@/utils/styles";

export type HeaderProps = {
  theme: string;
  logoAlt: string;
  tagline: string;
  navItems: {
    text: string;
    href: string;
  }[];
  languages: string[];
};

const Header: React.FC<HeaderProps> = (props) => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen);
  };

  return (
    <header className="absolute top-0 z-10 flex flex-wrap gap-16 justify-between items-end w-full text-base max-md:max-w-full">
      <Container className="flex w-full justify-between">
        <Image
          src={`/assets/logo-${props.theme}.svg`}
          alt={props.logoAlt}
          width={208}
          height={41}
          className="object-contain shrink-0"
        />

        {/* Navigation - Mobile */}
        <Hamburger onClick={toggleMenu} theme={props.theme} />
        <Backdrop isVisible={isMenuOpen}>
          <nav
            className={cn(
              "fixed top-0 right-0 w-80 h-screen bg-white flex flex-col pt-24 px-4 transition-transform duration-300 z-40 xl:hidden",
              isMenuOpen ? "translate-x-0" : "translate-x-full"
            )}
          >
            <p
              className={`text-sm text-slate-700 absolute max-w-52 top-10 transition-opacity duration-300 ${
                isMenuOpen ? "opacity-100" : "opacity-0"
              }`}
            >
              {props.tagline}
            </p>
            <hr className="mt-4 border-slate-200" />
            {props.navItems.map((item) => (
              <a
                key={item.text}
                href={item.href}
                className="text-slate-700 text-base py-3 border-b-slate-200 border-b"
                onClick={toggleMenu}
              >
                {item.text}
              </a>
            ))}
            <div className="mt-4">
              <LanguageSelector languages={props.languages} />
            </div>
          </nav>
        </Backdrop>

        {/* Navigation - Desktop */}
        <nav className="hidden xl:flex flex-wrap gap-6 items-end min-w-[240px] max-md:max-w-full">
          <p
            className={`text-sm ${
              props.theme === "light" ? "text-slate-50" : "text-slate-800"
            }`}
          >
            {props.tagline}
          </p>
          {props.navItems.map((item) => (
            <Link
              key={item.text}
              href={item.href}
              className={cn(
                props.theme === "light" ? "text-slate-50" : "text-slate-700",
                "underline-offset-4 underline"
              )}
            >
              {item.text}
            </Link>
          ))}
          <LanguageSelector languages={props.languages} theme={props.theme} />
        </nav>
      </Container>
    </header>
  );
};

export default Header;
